/* DO NOT EDIT, file generated by nestjs-i18n */

/* eslint-disable */
/* prettier-ignore */
import { Path } from "nestjs-i18n";
/* prettier-ignore */
export type I18nTranslations = {
    "auth": {
        "invalidCredentials": string;
        "invalidToken": string;
        "invalidRefreshToken": string;
        "invalidEmail": string;
        "invalidPassword": string;
        "invalidOldPassword": string;
        "invalidUsername": string;
    };
    "common": {
        "greeting": string;
    };
    "errors": {
        "accessForbidden": string;
        "entityNotFound": string;
        "entityDoesNotExist": string;
        "defaultEntity": string;
        "internalServerError": string;
        "unauthorizedAccess": string;
        "unknownColumn": string;
        "columnDoesNotExist": string;
        "invalidSqlSyntax": string;
        "sqlParsingFailed": string;
        "notNullConstraintFailed": string;
        "fieldRequiredNotNull": string;
        "fileNotFound": string;
        "db": {
            "uniqueConstraintFailed": string;
            "uniqueConstraintError": string;
            "uniqueConstraintErrorWithValue": string;
            "notNullConstraintFailed": string;
            "fieldRequiredNotNull": string;
            "fileNotFound": string;
        };
    };
    "validation": {
        "invalidBoolean": string;
        "min": string;
        "max": string;
        "minLength": string;
        "maxLength": string;
        "isEmail": string;
        "isNotEmpty": string;
        "isString": string;
        "required": string;
        "length": string;
        "string": string;
        "failed": string;
        "invalidEmail": string;
        "isIn": string;
        "arrayMinSize": string;
        "arrayMaxSize": string;
        "isInt": string;
        "isBoolean": string;
        "isUuid": string;
        "isPostalCode": string;
        "isPhoneNumber": string;
        "isMongoId": string;
        "isBase32": string;
        "isBase64": string;
        "isOctal": string;
        "isMagnetUri": string;
        "isMacAddress": string;
        "isBtcAddress": string;
        "isAlphanumeric": string;
        "isAlpha": string;
        "isArray": string;
        "arrayNotContains": string;
        "arrayContains": string;
        "isFqdn": string;
        "isUppercase": string;
        "isLowercase": string;
        "isJwt": string;
        "isJson": string;
        "isUrl": string;
        "isDate": string;
        "isAscii": string;
        "isCreditCard": string;
        "isHexColor": string;
        "isDataUri": string;
        "isIp": string;
        "isPositive": string;
        "contains": string;
        "isEnum": string;
        "isNumber": string;
        "arrayUnique": string;
        "requestBodyRequired": string;
        "files": {
            "invalidFileType": string;
            "invalidMaxSize": string;
            "invalidCountRange": string;
            "missingSyncId": string;
            "required": string;
        };
    };
};
/* prettier-ignore */
export type I18nPath = Path<I18nTranslations>;
