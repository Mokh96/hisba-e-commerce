{
  "error": "Error",
  "badRequest": "Bad request",
  "requestTimeout": "Request timeout",
  "unauthorizedAccess": "Unauthorized access",
  "forbiddenAccess": "Forbidden access",
  "notFound": "Not found",
  "conflict": "Conflict",
  "unprocessableEntity": "Unprocessable entity",
  "tooManyRequests": "Too many requests",
  "internalServerError": "Internal server error",
  "entityNotFound": "{entity} not found",
  "entityDoesNotExist": "{entity} does not exist.",
  "defaultEntity": "Entity",
  "fileNotFound": "File not found",
  "db": {
    "uniqueConstraintFailed": "Unique constraint failed",
    "uniqueConstraintError": "This {label} is already taken in {tableName} table",
    "uniqueConstraintErrorWithValue": "The {label} '{value}' is already taken in {tableName} table",
    "foreignKeyConstraintFailed": "Foreign key constraint failed",
    "foreignKeyConstraintError": "The provided value for '{field}' does not reference an existing record.",
    "foreignKeyDeletionConstraintFailed": "Foreign key deletion constraint failed",
    "foreignKeyDeletionConstraintError": "Cannot delete or update '{field}' because it is still referenced by other records.",
    "dataTooLongConstraintFailed": "Data too long for column",
    "dataTooLongConstraintError": "The value for '{field}' is too long and exceeds the allowed limit.",
    "notNullConstraintFailed": "Not-null constraint failed",
    "fieldRequiredNotNull": "The field '{field}' is required and cannot be null.",
    "invalidValueForField": "Invalid value for field",
    "invalidValueForFieldWithField": "The provided value for '{field}' is invalid or of incorrect type.",
    "dataOutOfRangeConstraint": "Provided data exceeds the allowed range.",
    "dataOutOfRangeConstraintError": "The value {value} for '{field}' is too large or too small for its column type.",
    "invalidSqlSyntax": "Invalid SQL syntax. Please contact the backend team.",
    "sqlParsingFailed": "SQL parsing failed due to malformed syntax.",
    "deadlockDetected": "A database deadlock occurred. Please retry the operation.",
    "deadlockDetectedError": "Deadlock detected. Please retry the operation.",
    "lockTimeOutError": "The database operation timed out while waiting for a lock.",
    "columnDoesNotExist": "Column '{field}' does not exist.",
    "unknownColumn": "The request references a non-existent column."
  }
}